# Starting point is the "Apache httpd v2.4 minimal configuration"
# https://wiki.apache.org/httpd/Minimal_Config
# https://support.rstudio.com/hc/en-us/articles/213733868-Running-Shiny-Server-with-a-Proxy

ServerAdmin {{{email}}}
ServerName {{{hostname}}}

ServerRoot "/usr/local/apache2"

ServerSignature Off
ServerTokens Prod

User daemon
Group daemon

# Minimum modules needed
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule mime_module modules/mod_mime.so
LoadModule dir_module modules/mod_dir.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule unixd_module modules/mod_unixd.so

# For proxying shiny:
LoadModule rewrite_module modules/mod_rewrite.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
LoadModule proxy_http_module modules/mod_proxy_http.so

# For doing auth
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so

# SSL
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule ssl_module modules/mod_ssl.so
LoadModule socache_shmcb_module modules/mod_socache_shmcb.so

# https://aaronsilber.me/2016/11/02/disable-3des-ssl-ciphers-apache-nginx/
SSLCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA:!3DES
SSLProxyCipherSuite HIGH:MEDIUM:!SSLv3:!kRSA:!3DES
SSLPassPhraseDialog  builtin
SSLSessionCache        "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
SSLSessionCacheTimeout  300

## https://httpd.apache.org/docs/trunk/ssl/ssl_howto.html
SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
SSLHonorCipherOrder on
SSLCompression      off
SSLSessionTickets   off


ErrorLog /proc/self/fd/2
LogLevel warn

LogFormat "%h %l %u %t \"%r\" %>s %b" common
CustomLog /proc/self/fd/1 common

TypesConfig conf/mime.types

PidFile logs/httpd.pid

User nobody

# Port to Listen on
Listen *:{{{ports.http}}}
Listen *:{{{ports.https}}}
Listen *:{{{ports.admin}}}
Listen *:{{{ports.stats}}}

# In a basic setup httpd can only serve files from its document root
DocumentRoot "/usr/local/apache2/htdocs"

# Default file to serve
DirectoryIndex index.html

# Never change this block
<Directory />
  AllowOverride None
  Require all denied
</Directory>

# Allow documents to be served from the DocumentRoot
<Directory "/usr/local/apache2/htdocs">
  Require all granted
</Directory>

<VirtualHost *:{{{ports.http}}}>
  RewriteEngine On
  RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
</VirtualHost>

<VirtualHost *:{{{ports.https}}}>
  SSLEngine on
  # or server.crt
  SSLCertificateFile "/usr/local/apache2/conf/ssl/certificate.pem"
  # or server.key
  SSLCertificateKeyFile "/usr/local/apache2/conf/ssl/key.pem"
  CustomLog "/usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

  RewriteEngine on
  RewriteCond %{HTTP:Upgrade} =websocket
  RewriteRule /(.*) ws://haproxy:8080/$1 [P,L]
  RewriteCond %{HTTP:Upgrade} !=websocket
  RewriteRule /(.*) http://haproxy:8080/$1 [P,L]
  ProxyPass / http://haproxy:8080/
  ProxyPassReverse / http://haproxy:8080/

  IncludeOptional conf/auth/*.conf
</VirtualHost>

<VirtualHost *:{{{ports.admin}}}>
  SSLEngine on
  # or server.crt
  SSLCertificateFile "/usr/local/apache2/conf/ssl/certificate.pem"
  # or server.key
  SSLCertificateKeyFile "/usr/local/apache2/conf/ssl/key.pem"
  CustomLog "/usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

  RewriteEngine on
  RewriteCond %{HTTP:Upgrade} =websocket
  RewriteRule /(.*) ws://admin:3838/$1 [P,L]
  RewriteCond %{HTTP:Upgrade} !=websocket
  RewriteRule /(.*) http://admin:3838/$1 [P,L]
  ProxyPass / http://admin:3838/
  ProxyPassReverse / http://admin:3838/
</VirtualHost>

<VirtualHost *:{{{ports.stats}}}>
  SSLEngine on
  # or server.crt
  SSLCertificateFile "/usr/local/apache2/conf/ssl/certificate.pem"
  # or server.key
  SSLCertificateKeyFile "/usr/local/apache2/conf/ssl/key.pem"
  CustomLog "/usr/local/apache2/logs/ssl_request_log" \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

  RewriteEngine on
  ProxyPass / http://haproxy:9001/
  ProxyPassReverse / http://haproxy:9001/
</VirtualHost>
